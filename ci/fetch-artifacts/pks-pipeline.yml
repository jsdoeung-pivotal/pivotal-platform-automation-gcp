---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: every-two-days
  type: time
  source:
    interval: 48h
- name: config
  type: git
  source:
    uri: ((config-uri))
    branch: master
- name: platform-automation-pivnet
  type: pivnet
  source:
    api_token: ((pivnet-token))
    product_slug: platform-automation
    product_version: 2\.(.*)
    sort_by: semver
- name: opsman-product
  type: gcs
  source:
    regexp: ops-manager-gcp-(.*).yml
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: pks-product
  type: gcs
  source:
    regexp: pivotal-container-service-(.*).pivotal
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: pks-stemcell
  type: gcs
  source:
    regexp: pks-stemcell/light-bosh-stemcell-(.*)-google.*\.tgz
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: harbor-product
  type: gcs
  source:
    regexp: harbor-container-registry-(.*).pivotal
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: harbor-stemcell
  type: gcs
  source:
    regexp: harbor-stemcell/light-bosh-stemcell-(.*)-google.*\.tgz
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))


- name: platform-automation-tasks
  type: gcs
  source:
    regexp: platform-automation-tasks-(.*).zip
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

- name: platform-automation-image
  type: gcs
  source:
    regexp: platform-automation-image-(.*).tgz
    bucket: ((gcs-bucket))
    json_key: |
      ((gcp-credentials))

jobs:
- name: fetch-opsman
  serial_groups: [ fetch-ops ]
  plan:
  - aggregate:
    - get: every-two-days
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-opsman-image
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: config/ops-manager/2.8/gcp/config-pivnet.yml
  - aggregate:
    - put: opsman-product
      params:
        file: downloaded-product/*

- name: fetch-pks
  serial_groups: [ fetch-ops ]
  plan:
  - aggregate:
    - get: every-two-days
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-pks-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: config/pivotal-container-service/1.7/config-pivnet.yml
    output_mapping: {downloaded-stemcell: pks-stemcell}
  - aggregate:
    - put: pks-product
      params:
        file: downloaded-product/*.pivotal
    - put: pks-stemcell
      params:
        file: pks-stemcell/*.tgz


- name: fetch-harbor
  serial_groups: [ fetch-ops ]
  plan:
  - aggregate:
    - get: every-two-days
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate-config
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CA_CERT: ((credhub-ca-cert))
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: /
      INTERPOLATION_PATH: config
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-harbor-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: config/harbor-container-registry/1.10/config-pivnet.yml
    output_mapping: {downloaded-stemcell: harbor-stemcell}
  - aggregate:
    - put: harbor-product
      params:
        file: downloaded-product/*.pivotal
    - put: harbor-stemcell
      params:
        file: harbor-stemcell/*.tgz


- name: fetch-platform-automation
  # We use the pivnet resource to bootstrap the pipeline,
  # and because this product is part of the pipeline, not the foundation
  plan:
  - get: platform-automation-pivnet
    trigger: true
  - aggregate:
    - put: platform-automation-tasks
      params:
        file: platform-automation-pivnet/*tasks*.zip
    - put: platform-automation-image
      params:
        file: platform-automation-pivnet/*image*.tgz
